@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<ASPNETCoreMVC.Models.Northwind.Product>;
@{
    ViewData["Title"] = "Index";
    var pageNumber = ViewContext.HttpContext.Request.Query["pageNumber"];
    var pageSize = ViewContext.HttpContext.Request.Query["pageSize"];
}

<h1>Products List</h1>

<div class="col-md-3">
    <label class="mr-2 mt-2 text-info small"> Page number: @pageNumber | @Model.Count records</label>
</div>
<div class="col-md-3 text-right">
    <div class="form-group form-inline">
        <label class="mr-2">Page Size: </label>
        <select name="PageSize" id="PageSize" class="form-control">
            @for (var i = 1; i <= 10; i++)
            {
                <option value="@(i*5)">@(i*5)</option>
            }
        </select>
    </div>
</div>
<input type="hidden" id="pageSize" value="10" />
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Quantity per unit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@Html.DisplayFor(x => product.ProductID)</td>
                <td>@Html.DisplayFor(x => product.ProductName)</td>
                <td>@Html.DisplayFor(x => product.QuantityPerUnit)</td>
            </tr>
        }
    </tbody>
</table>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<div>
    @Html.PagedListPager(Model, page => Url.Action("Index", "Home", new { page }) + "&pageSize=" + pageSize,
        X.PagedList.Web.Common.PagedListRenderOptionsBase.ClassicPlusFirstAndLast)
</div>
<script>
    $(function () {
        pageSize = $('#pageSize').val();
        window.location.href = '/Home/Index?pageNumber=@pageNumber&pageSize=' +pageSize;
    });
</script>
